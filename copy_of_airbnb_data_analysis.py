# -*- coding: utf-8 -*-
"""Copy of Airbnb_Data_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14rkEH0MkHG3CpeSDTWXJlLIatn7Yvci7

#### **Data Science and Data Analysis**
*by [Marriane Silva](https://github.com/Mdrsilva)*

[![LinkedIn](https://img.shields.io/badge/LinkedIn-marrianesilva-blue.svg)](https://www.linkedin.com/in/marriane-dos-reis-silva/)[![GitHub](https://img.shields.io/badge/GitHub-marrianesilva-purple.svg)](https://github.com/Mdrsilva)
---

# Airbnb Data Analysis - *Vancouver, Canada*


[Airbnb](https://www.airbnb.com/) began in 2008 when two designers hosted three travelers who needed a place to stay. Being a shortened version of its original name, "Air Bed and Breakfast", nowadays, Airbnb is considered the **biggest hotel company**, and the interesting fact is that Airbnb is **not hotel owned or operated**!

The Airbnb platform provides a more convenient, affordable and relatively stress-free way to rent a space, connecting travelers and hosts who want to rent their places in a practical way.

Online marketplace for lodging, the company listings are primarily homestays for vacation rentals and tourism activities. In the beginning of 2022, guests had booked over 1 billion stays all over the world, according to [Airbnb Statistics](https://ipropertymanagement.com/research/airbnb-statistics).


Airbnb provides data for some of the world's main cities, which can be found in the [Inside Airbnb Portal](http://insideairbnb.com/get-the-data.html), making it possible to develop projects and *Data Science* solutions using large amounts of data.

<center><img alt="Analysing Airbnb" width="10%" src="https://www.area360.com.au/wp-content/uploads/2017/09/airbnb-logo.jpg"></center>

**In this *notebook*, I will analyze data from Vancouver, Province of British Columbia (BC), and extract insights from the raw data.**

#Vancouver Overview


Located in the Lower Mainland region of the Province of BC, Vancouver is the most populous city in Western Canada. The 2021 census recorded 662,248 people in the city, up from 631,486 in 2016. The Greater Vancouver area had a population of 2.6 million in 2021, making it the third-largest metropolitan area in Canada. 

Framed by the Pacific Ocean and Coast Mountains, Vancouver is one of the most ethnically diverse cities in Canada. Surrounded by mountains, this location is a popular filming spot which boasts a thriving arts community, including music, theatre and events. Movies such as ***Big Eyes***, ***Apollo 18***, ***This Means War***, ***X-Men: The Last Stand***, ***Twilight: Breaking Dawn Part 2***, ***Juno***, ***Mission Impossible IV: Ghost Protocol*** were shot almost entirely in Vancouver. This city certainly lives up to the nickname “Hollywood North”.

<center><img alt="Analysing Airbnb" width="90%" src="https://wallpaperaccess.com/full/1593382.jpg"></center>


>**_"You’re gorgeous, you’re sophisticated, you live well…Vancouver is Manhattan with mountains. It’s a liquid city, a tomorrow city, equal parts India, China, England, France, and the Pacific Northwest. It’s the cool North American sibling."_** - The New York Times 

>**_“To describe the beauties of this region will on some future occasion be a very grateful task to the pen of a skilled panegyrist. The serenity of the climate, the innumerable pleasing landscapes, and the abundant fertility that unassisted nature puts forth, requires only to be enriched by the industry of man with villages, mansions, cottages, and other buildings.”_** - Captain George Vancouver, 1972</p>

## Data Extractions

The data was obtained from [Inside Airbnb](http://insideairbnb.com/get-the-data.html) and is composed of 1 table, **_listings.csv_**, which summarizes information and metrics for listings in Vancouver.

Before moving forward, I will import the table and do some basic visualizations.
"""

# Commented out IPython magic to ensure Python compatibility.
# Importing all the required libraries needed for this analysis

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import folium

# %matplotlib inline

# Importing the required file
df_airbnb = pd.read_csv("http://data.insideairbnb.com/canada/bc/vancouver/2022-09-10/visualisations/listings.csv")

"""## Exploratory Data Analysis (EDA)

This step focuses on examining and understanding the data, extracting insights and main characteristics, as well as how the information is structured.

**Variables dictionary**
* `id` - Airbnb's unique identifier for the listing
*  `name`	- Name of the listing
* `host_id`	-	Airbnb's unique identifier for the host/user
* `host_name`	-	First name of the host(s)
* `neighbourhood_group`	-	The neighbourhood group as geocoded using the latitude and longitude against neighborhoods as defined by open or public digital shapefiles
* `neighbourhood`	- Neighbourhood name
* `latitude`	-	Uses the World Geodetic System (WGS84) projection for latitude and longitude
* `longitude`	- Uses the World Geodetic System (WGS84) projection for latitude and longitude
* `room_type`	-	Entire home/apt, Private room, Shared room, Hotel
* `price`	-	Daily price in local currency
* `minimum_nights`	-	Minimum number of nights staying at listing (calendar rules may be different)
* `number_of_reviews`	- The number of reviews the listing has
* `last_review`	- The date of the last/newest review
* `reviews_per_month` -	The number of reviews the listing has over the lifetime of the listing
* `calculated_host_listings_count`	-	The number of listings the host has in the current city/region geography
* `availability_365` - The availability of the listing x days in the future as determined by the calendar. Note a listing may not be available because it has been booked by a guest or blocked by the host
* `number_of_reviews_ltm`	- The number of reviews the listing has (in the last 12 months)
* `license`	- The licence/permit/registration number

Before starting the analysis, these are some of the questions I have specified for this project:

* **`Q1. How many attributes (variables) and entries (rows) does the dataset have? What are the types of variables?`**
* **`Q2. Are there missing values?`**
* **`Q3. What are the frequency distributions of the variables?`**
* **`Q4. What is the average rental price?`**
* **`Q5.Are there outliers?`**
* **`Q3. What are the distributions of the variables?`**
* **`Q4. Are there outliers?`**
* **`Q5. What are the correlations between the variables?`**

Let's take a look at the **df_airbnb** table, displaying the first 5 entries.
"""

# Checking the first 5 entries of the dataset
df_airbnb.head()

"""### **Q1. How many attributes (variables) and entries (rows) does the dataset have? What are the types of variables?**

I downloaded the summarized version of the Airbnb dataset. On the same page, there is a full version with more than 74 variables.
"""

# Identifying the dataframe shape
print("Entries:\t{}".format(df_airbnb.shape[0]))
print("Variables:\t{}".format(df_airbnb.shape[1]))
display(df_airbnb.dtypes)

"""The df_airbnb table has 5572 rows and 18 columns. The columns `price` is of integer type, `latitude` and `longitude` are of float type. These variables have the expected datatypes; therefore, I do not need to convert those columns. The `last_review` column has a dtype value of object. As this variable represents time, I will convert this column to a datetime dtype using pd.to_datetime() function."""

#  Converting the last_review column to a datetime dtype
df_airbnb.last_review = pd.to_datetime(df_airbnb.last_review)

# Checking the columns dtype
df_airbnb.dtypes

"""As we can see, our `last_review` column is now as datetime dtype.

### **Q2. Are there missing values?**

The quality of a dataset is related to the number of missing values. Understanding whether these null values are significant compared to the total entries is crucial.

That being said, it is important to be able to deal with messy data, whether that means missing values, inconsistent formatting, disarranged records, or meaningless outliers.
"""

# Sorting variables in descending order by missing value count
(df_airbnb.isnull().sum()/df_airbnb.shape[0]).sort_values(ascending=False)

"""* We can see that 100% of values are missing in the `neighbourhood_group` column. As a result, I will not include this column in my analysis.
* There are approximately 31% missing values in the `license` column. It is likely due to the non-existence of the room/property licensing being published by an individual.
* The `reviews_per_month` and `last_review` variables have around the same quantity of missing values (approximately 15% of the entries). I will verify whether the number of reviews for these locations is zero.
* There are no missing values in the other columns.


"""

# Number of reviews for locations that have a null last_review column
df_airbnb[df_airbnb.last_review.isnull()].number_of_reviews.sum()

# Number of reviews for locations that have a null reviews_per_month column
df_airbnb[df_airbnb.reviews_per_month.isnull()].number_of_reviews.sum()

"""I can conclude that the null data actually contains information for the dataset as the database has already been handled by AirBnb staff. Based on the findings above, I will replace the invalid data in the `reviews_per_month` column and the `license` column with zero and the string 'No license', respectively."""

# Replacing the null data in the license column
df_airbnb.license.replace(np.nan, 'No license', inplace=True)

# Replacing the null data in the license reviews_per_month
df_airbnb.reviews_per_month.replace(np.nan, 0, inplace=True)

"""With 100% of missing values, the column `neighbourhood_group` has no predictive power. I will exclude this columns from my dataset."""

# Excluding neighbourhood_group column from the dataset
df_airbnb.drop(columns=['neighbourhood_group'], inplace=True)

"""As mentioned before, the column `last_review` has around 15% of missing values and has not been cleansed. If I chose to use this column in my analysis, I would create a copy of the dataframe, eliminate the null values, and proceed with my analysis."""

# Checking the missing values and column types
df_airbnb.info()

"""There are no longer missing values in the `license` and `review_per_month` columns.

### **Q3. What are the frequency distributions of the variables?**
In order to verify the frequency distributions, I will plot histograms of the numeric variables.
"""

# Using the seaborn plotting view
plt.style.use('seaborn')

# Plotting the histogram of numeric variables
df_airbnb.hist(figsize=(15,20), grid=False);

"""Here we can see that most variables have an asymmetric distribution and extract some insights:

- Based on the distribution of latitude and longitude, the locations are likely to be concentrated in a certain region.
- The most recent review was given in 2022 and on the same date that the dataset was published, showing that the Airbnb listings have a high turnover rate.
- The `calculated_host_listings_count`, `number_of_reviews`, `reviews_per_month`, `number_of_reviews_ltm`, `minimum_nights` are concentrated in intervals with the lowest values in the dataset.
- The availability of the listing in days (`availability_365`) consistently changes depending on the listing. This means the places tend to be available for different days throughout the year.

### **Q4. What is the average rental price?**
"""

# Calculating the average price
df_airbnb.price.mean()

"""The average price of a listing is CAD $233.40.

### **Q5. Are there outliers?** ###

By the histogram distribution, it is possible to verify the evidence of outliers (these are unusual values, in other words, data points differ significantly from other observations). Outliers present a particular challenge for analysis. Identifying, understanding and treating these values is essential, as they can give us an incorrect picture of our data.

###_Why outlier exists?_
There are generally two reasons for the existence of outliers: 

First, the data might be entered incorrectly. These errors can be a result of human error, generated by the system or a result of an incorrect calculation. Second, they may be real data points which are present because of the nature of the data.

Let's take as an example the `price`, `minimum_nights` and `calculated_host_listing_count` variables. The values do not follow a distribution and distort the entire graphical representation.
To confirm the presence of outliers, I will use these two methods:

* Statistical summary using describe()
* Boxplot and IQR Score Method
"""

# Having a general view of the variables
df_airbnb[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',
    'calculated_host_listings_count', 'availability_365']].describe().round(1)

"""Looking at the statistical summary above, I can confirm some hypotheses, such as:

The `price` variable has 75% of the values below CAD 262.00, but its maximum value is CAD 20,000.00. Based on this, there is evidence of the presence of outliers on this variable. The minimum number of nights (`minimum_nigts`) is 1 night, but the max value is 399 days (over a year), which also shows outliers in the `minimum_night` column.

## Removing Outliers

To address the outliers of this dataset, I will check the statistical distribution, plot boxplots and find the upper and the lower limits of the boxplots using the IQR Score.

The IQR Score method lists the data values from least to greatest. When the values are in ascending order, it is possible to identify the median (Q2). This value is the midpoint in the data set,  dividing the data into a lower 50% and an upper 50%.

The IQR is calculated subtracting the third quartile (75%) from the first quartile (25%).


# IQR = Q3 - Q1


<p align="center"><img src="https://www.simplypsychology.org/boxplot-outliers.png", width="50%"></p>

Let's take a look at the data and see the findings.
"""

# Identifying outliers in the price column
q1_price = df_airbnb.price.quantile(.25)
q3_price = df_airbnb.price.quantile(.75)
IQR_price = q3_price - q1_price
print('Price IQR:', IQR_price)

# Defining the upper and the lower limits                                       
sup_price = q3_price + 1.5 * IQR_price
inf_price = q1_price - 1.5 * IQR_price

print('Price upper limit:', sup_price)
print('Price lower limit:', inf_price)

"""I can conclude that I do not have lower outliers, as the minimum price is zero. The zero price will be excluded from the dataset as it does not make sense to have a listing which is 0 CAD. I will also exclude the higher outliers, representing 6.55% of the data, as shown below.

#### Boxplot for price


"""

# Verifying the original dataset
fig, ax = plt.subplots(figsize=(15,3))
df_airbnb.price.plot(kind='box', vert=False);
ax.set_title('Original Dataset - price')
plt.show()
print("The dataset has {} columns".format(df_airbnb.shape[0]))
print("{} entries greater than 481.37".format(len(df_airbnb[df_airbnb.price > sup_price])))
print("Representing {:.2f}% of the dataset".format((len(df_airbnb[df_airbnb.price > sup_price]) / df_airbnb.shape[0])*100))

# Identifying the outliers in the minimum_nights column
q1_minimum_nights = df_airbnb.minimum_nights.quantile(.25)
q3_minimum_nights = df_airbnb.minimum_nights.quantile(.75)
IQR_minimum_nights = q3_minimum_nights - q1_minimum_nights
print('Mininum nights IQR: ', IQR_minimum_nights)

# Defining the upper and the lower limits                                                                              
sup_minimum_nights = q3_minimum_nights + 1.5 * IQR_minimum_nights
inf_minimum_nights = q1_minimum_nights - 1.5 * IQR_minimum_nights

print('Minimum_nights upper limit:', sup_minimum_nights)
print('Minimum_nights lower limit:', inf_minimum_nights)

"""I can conclude that the `minimum_nights` variable has no lower outliers, as minimum night is 1 night. However, I will exclude the higher outliers, representing 2.94% of the data, as shown below.

#### Boxplot para minimum_nights

"""

# Verifying the original dataset
fig, ax = plt.subplots(figsize=(15,3))
df_airbnb.minimum_nights.plot(kind='box', vert=False);
ax.set_title('Original Dataset - minimum_nights')
plt.show()
print("The dataset has {} columns".format(df_airbnb.shape[0]))
print("{} entries greater than 72".format(len(df_airbnb[df_airbnb.minimum_nights > sup_minimum_nights])))
print("Representing {:.2f}% of the dataset".format((len(df_airbnb[df_airbnb.minimum_nights > sup_minimum_nights]) / df_airbnb.shape[0])*100))

# Cleaning the dataset/excluding the outliers
df_clean = df_airbnb.copy()

df_clean.drop(df_clean[df_clean.price > sup_price].index, axis=0, inplace=True)
df_clean.drop(df_clean[df_clean.minimum_nights > sup_minimum_nights].index, axis=0, inplace=True)
df_clean.drop((df_clean[df_clean.price == 0]).index, axis=0, inplace=True)

print('Dataset shape with outliers:', df_airbnb.shape)
print('Dataset shape without outliers:',df_clean.shape)

"""#### Boxplot for price and minimum_nights in the clean dataset


"""

# Verifying the clean dataset - price variable
fig, ax = plt.subplots(figsize=(15,3))
df_clean.price.plot(kind='box', vert=False);
ax.set_title('Clean dataset - price')
plt.show()
print("Original dataset: {} columns".format(df_airbnb.shape[0]))
print("Clean dataset: {} columns".format(df_clean.shape[0]))

# Verifying the clean dataset - minimum nights variable
fig, ax = plt.subplots(figsize=(15,3))
df_clean.minimum_nights.plot(kind='box', vert=False);
ax.set_title('Clean dataset - minimum nights')
plt.show()
print("Original dataset: {} columns".format(df_airbnb.shape[0]))
print("Clean dataset: {} columns".format(df_clean.shape[0]))

"""Next, I will check the frequency distribution of variables after deleting the outliers.



"""

# Using seaborn plotting view
plt.style.use('seaborn')

# Plotting the histogram of numeric variables
df_clean.hist(figsize=(20,15), grid=False);

"""Now that I have cleaned the data, will recheck the variables."""

# Having a general view of the variables
df_clean[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',
    'calculated_host_listings_count', 'availability_365']].describe().round(1)

df_clean.minimum_nights[df_clean.minimum_nights < 20].plot.hist(bins=20);
df_clean.minimum_nights[df_clean.minimum_nights < 20].shape[0] / df_clean.shape[0]

"""The calculated median price is CAD 160.00 and the average price is CAD 185.20 after excluding the outliers. In the dataset with outliers, the median price was CAD 170.00 and the average was CAD 233.40, which shows the average is more sensitive to outliers than the median. Even though 75% of the minimum_nights are lower than 30 days and our maximum `minimum_nights` is 70 days, I can see that 64% of the minimum number of stayed nights are lower than 20 nights.

### **Q6. What type of property is most rented on Airbnb?**

The `room_type` variable column indicates the rental type advertised on Airbnb. People who have already rented with the company know there are options for entire houses or apartments, single rooms, or even sharing rooms with others.

Let's count the number of occurrences of each rental type, using the `value_counts()` method.
"""

# Room type distribution
df_clean.room_type.value_counts()

df_clean.room_type.value_counts(1)
#df_clean.room_type.value_counts() / df_clean.shape[0]

"""Entire home/apartment and private rooms represent more than 98% of the dataset, indicating the focus/differentiation of the Airbnb business in Vancouver. On the other hand, hotel rooms and shared rooms are not a substantial part of the business.

### **Q7. What neighbourhoods have more Airbnb rentals?**
"""

# Checking the rentals by regions
df_clean.neighbourhood.value_counts().plot(kind='bar',rot=90);

"""As we can see, the top 5 Airbnb neighbourhoods being rented are Downtown, West End, Kitsilano, Kensington-Cedar Cottage and Mount Pleasant.

### **Q8. What are the most expensive locations in Vancouver?**

One way to check one variable against another is to use `groupby()`. In this case, I want to compare the neighbourhoods based on the rental price.
"""

# Checking the average of price per neighbourhood
df_clean.groupby(['neighbourhood']).price.mean().sort_values(ascending=False)[:30]

"""I can conclude that Downtown, Downtown Eastside, Kitsilano 
and Strathcona have the highest average prices per listing. Kerrisdale, Oakridge, Kensington-Cedar Cottage and Sunset have the lowest average prices.

### **Q9. What is the minimum_nights rental average?**
"""

# Checking the `minimum_nights`average
df_clean.minimum_nights.mean()

"""In Vancouver, Airbnb guests rent a minimum of 13 nights on average.

## Generating Map with the listings

As Latitudes and Longitudes informations are provided for each property, I will create an interactive map, which it is possible to see the listings name by just using the cursor of the mouse.

I will use only a portion of the dataset to have a more focused and better visualization of the listings.
"""

# Using a portion of the dataset
df_map = df_clean.sample(frac=0.05, random_state=0)

# Creating the variables
latitude = df_map.latitude.values
longitude = df_map.longitude.values
listings = df_map.name.values

# Creating the map
van = folium.Map(location=[49.2487529,-123.058695],
                 zoom_start=12)

# Adding the listing name information
for lat, lon, listing in zip(latitude, longitude, listings):
    folium.Marker(location=[float(lat), float(lon)], popup=listing).add_to(van)
    
# Plotting the map
van

"""### **Q10. What is the correlation between the variables?**

Here I will check if there is a relationship or similarity between the variables.

This relationship can be measured using the correlation coefficient to establish the intensity. To identify the existing correlations between the variables of interest, I will:

* Create a correlation matrix
* Plot a correlation heatmap using the seaborn library
"""

# Creating correlation matrix
corr = df_clean[['price', 'minimum_nights', 'number_of_reviews', 'reviews_per_month',
    'calculated_host_listings_count', 'availability_365']].corr()


# Displaying correlation matrix 
display(corr)

# Plotting a correlation heatmap
sns.heatmap(corr, cmap = 'RdBu', fmt='.2f', square = True , linecolor='white', annot= True);

"""In general, no significant correlation was found between the price and the other variables. It is interesting to mention the slightly negative correlation between price and minimum_nights variable (-0.25), showing that the higher the daily price is, the lower the number of stayed nights, which would be logical to conclude without the correlation heatmap.

## Discussions

In this project, I analyzed the Airbnb Dataset and found there were *outliers* in some of the variables.

I noticed that in some locations, only a few observations were available, which can distort the statistical information of some attributes.

People are mostly renting home/apartment and private rooms in Vancouver (around 98% of the dataset).

Downtown, West End and Kitsilano are some of the neighbourhoods with the highest daily price on average. However, in these areas, more listings being rented compared to other areas.

Finally, this *dataset* is a summarized version. For further exploratory data analysis, it might be interesting to use the complete dataset, which contains over 70 attributes.

## Resources used
* [Hands-on Data Science by Sigmoidal](https://sigmoidal.ai/)
* [Python Programming](https://www.python.org/)
* [Data Source - Airbnb](http://insideairbnb.com/get-the-data.html)
* [Airbnb Statistics](https://ipropertymanagement.com/research/airbnb-statistics)
* [Festival and Events in Vancouver](https://curiocity.com/vancouver/)
* [Missing values](https://www.geeksforgeeks.org/working-with-missing-data-in-pandas/)
* [Movies filmed in Vancouver](https://www.canadiantraveller.com/movies_filmed_in_vancouver)
* [About Vancouver](https://worldforumfoundation.org/2021-about-vancouver/)
* [Statcan](https://www12.statcan.gc.ca/census-recensement/index-eng.cfm)
"""

